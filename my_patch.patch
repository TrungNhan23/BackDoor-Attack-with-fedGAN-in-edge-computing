diff --git a/federated-learning/federated_learning/device_exp/client_app.py b/federated-learning/federated_learning/device_exp/client_app.py
index 9275ca4..c1bbb7a 100644
--- a/federated-learning/federated_learning/device_exp/client_app.py
+++ b/federated-learning/federated_learning/device_exp/client_app.py
@@ -143,7 +143,7 @@ class AttackerClient(NumPyClient):
             self.local_epochs,
             self.device,
         )
-        plot_real_fake_images(self.net, real_img, fake_img, output_dir='output/result')
+        # plot_real_fake_images(self.net, real_img, fake_img, output_dir='output/result')
         self.save_checkpoint()
         g_losses.append(g_loss)
         d_losses.append(d_loss)
diff --git a/federated-learning/federated_learning/model/gan_model.py b/federated-learning/federated_learning/model/gan_model.py
index 11333d1..07bcd08 100644
--- a/federated-learning/federated_learning/model/gan_model.py
+++ b/federated-learning/federated_learning/model/gan_model.py
@@ -338,7 +338,7 @@ def create_attacker_data(model, generator, trainloader,
                                             generated_labels,
                                             untargeted=untargeted,
                                             epsilon=EPSILON)
-    elif mode == 'pgd_imp':
+    elif mode == 'pgd-imp':
         adv_imgs = generate_PGD_imp_adversarial_images(model, 
                                             generated_images, 
                                             generated_labels,
@@ -383,7 +383,6 @@ def predict_on_adversarial_testset(model, testloader, current_round,
         if isClean is not True: 
             mask = (labels == 1)
             images = images[mask]
-            # labels = torch.full((images.size(0),), target, dtype=torch.long, device=images.device)
             labels = labels[mask]
             
         if len(images) == 0:
@@ -402,7 +401,7 @@ def predict_on_adversarial_testset(model, testloader, current_round,
                                                         labels, 
                                                         untargeted=isClean, 
                                                         epsilon=epsilon)
-            elif mode == 'pgd_imp':
+            elif mode == 'pgd-imp':
                 adv_images = generate_PGD_imp_adversarial_images(model, 
                                                         images, 
                                                         labels, 
diff --git a/federated-learning/federated_learning/simulation_exp/client_app.py b/federated-learning/federated_learning/simulation_exp/client_app.py
index be0d2df..45d1072 100644
--- a/federated-learning/federated_learning/simulation_exp/client_app.py
+++ b/federated-learning/federated_learning/simulation_exp/client_app.py
@@ -135,7 +135,7 @@ class AttackerClient(NumPyClient):
             self.local_epochs,
             self.device,
         )
-        plot_real_fake_images(self.net, real_img, fake_img, output_dir='output/result')
+        # plot_real_fake_images(self.net, real_img, fake_img, output_dir='output/result')
         self.save_checkpoint()
         g_losses.append(g_loss)
         d_losses.append(d_loss)
diff --git a/federated-learning/federated_learning/ultility/config.py b/federated-learning/federated_learning/ultility/config.py
index e496e94..db453b4 100644
--- a/federated-learning/federated_learning/ultility/config.py
+++ b/federated-learning/federated_learning/ultility/config.py
@@ -1,7 +1,7 @@
-ATTACK_MODE = 'fgsm'
+ATTACK_MODE = 'pgd-imp'
 EPSILON = 0.3
 NUM_STEPS = 30
-Clean = False
+Clean = True
 
 #if test in clean label attack, set the untargeted to True
 if Clean:
diff --git a/federated-learning/pyproject.toml b/federated-learning/pyproject.toml
index b58732d..571c359 100644
--- a/federated-learning/pyproject.toml
+++ b/federated-learning/pyproject.toml
@@ -35,5 +35,5 @@ default = "local-simulation"
 
 [tool.flwr.federations.local-simulation]
 options.num-supernodes = 10
-#options.backend.client-resources.num-cpus = 1
-#options.backend.client-resources.num-gpus = 0.25
\ No newline at end of file
+options.backend.client-resources.num-cpus = 1
+options.backend.client-resources.num-gpus = 0.25
\ No newline at end of file
